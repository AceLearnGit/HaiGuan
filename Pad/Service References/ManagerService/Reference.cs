//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pad.ManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineConfigModel", Namespace="http://schemas.datacontract.org/2004/07/Manager")]
    [System.SerializableAttribute()]
    public partial class MachineConfigModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeciveIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceEndPointAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeciveID {
            get {
                return this.DeciveIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeciveIDField, value) != true)) {
                    this.DeciveIDField = value;
                    this.RaisePropertyChanged("DeciveID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceEndPointAddress {
            get {
                return this.DeviceEndPointAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceEndPointAddressField, value) != true)) {
                    this.DeviceEndPointAddressField = value;
                    this.RaisePropertyChanged("DeviceEndPointAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManagerService.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DoWork", ReplyAction="http://tempuri.org/IWCFService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DoWork", ReplyAction="http://tempuri.org/IWCFService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetAllMachineConfig", ReplyAction="http://tempuri.org/IWCFService/GetAllMachineConfigResponse")]
        Pad.ManagerService.MachineConfigModel[] GetAllMachineConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetAllMachineConfig", ReplyAction="http://tempuri.org/IWCFService/GetAllMachineConfigResponse")]
        System.Threading.Tasks.Task<Pad.ManagerService.MachineConfigModel[]> GetAllMachineConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMettingMachineConfig", ReplyAction="http://tempuri.org/IWCFService/GetMettingMachineConfigResponse")]
        Pad.ManagerService.MachineConfigModel GetMettingMachineConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMettingMachineConfig", ReplyAction="http://tempuri.org/IWCFService/GetMettingMachineConfigResponse")]
        System.Threading.Tasks.Task<Pad.ManagerService.MachineConfigModel> GetMettingMachineConfigAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Pad.ManagerService.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Pad.ManagerService.IWCFService>, Pad.ManagerService.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public Pad.ManagerService.MachineConfigModel[] GetAllMachineConfig() {
            return base.Channel.GetAllMachineConfig();
        }
        
        public System.Threading.Tasks.Task<Pad.ManagerService.MachineConfigModel[]> GetAllMachineConfigAsync() {
            return base.Channel.GetAllMachineConfigAsync();
        }
        
        public Pad.ManagerService.MachineConfigModel GetMettingMachineConfig() {
            return base.Channel.GetMettingMachineConfig();
        }
        
        public System.Threading.Tasks.Task<Pad.ManagerService.MachineConfigModel> GetMettingMachineConfigAsync() {
            return base.Channel.GetMettingMachineConfigAsync();
        }
    }
}
